What is the main difference between a stack and a queue?

stack organizes data in a last in first out priority while queue organizes data in a first in first our priority.

What are the similarities between stacks and queues?

They are both data structures, have an insertion and deletion mechanism.

Imagine you are an engineer tasked with implementing the UNDO and REDO options in a word processor such as Microsoft Word. Which data structure would you use for each option and why?

For the undo option, I would use the stack data structure.
For the redo option, I would use the queue data structure.
I will explain with this example:
-Stack-
-I type: a b c d e
-When I hit undo, e erases. When I hit undo again, d erases and so on until you get to a.
-The last letters entered are the first to leave (LIFO).
-Queue-
-I just have the letter a, I want to go back to a b c d e.
-When I hit redo, b appears and then c appears and then so on until I have a b c d e again.
-Letters are being appended to the end of the list (enqueue).

Programming Questions
You may program the following question in any language of your choice. Before you begin coding, write out a plan as to how you will solve the question.

Given a string, reverse it using a stack. For example, the string "Bloc!" should be converted to "!colB".

reverseString = string => string.split("").reverse().join("");

Implement the pop method of a stack using one queue. Make a FIFO data structure mirror the functionality of a LIFO data structure. Since the internal list is not the same as defined in the checkpoint, it may help to rewrite the pseudocode first.

To delete an item, take all of the elements in the queue one at a time and put them at the end of the queue, except for the last one which should be removed and returned.

Implement the enqueue and dequeue methods defined in the checkpoint inside your own Queue class.
